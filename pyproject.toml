[tool.mypy]
# Be vewy, vewy stwict, we'we hunting wabbits^Wbugs.
strict = true

# Automagically make imported object part of mypy's view of module's namespace.
implicit_reexport = true

# Make error messages more rich, this helps better targeted waivers.
show_error_codes = true

# Allow mypy to follow imports to get correct picture of type
# annotations across module boundaries.
follow_imports = "normal"

python_version = "3.7"
files = ["bin/tmt", "tmt/", "setup.py"]

[[tool.mypy.overrides]]
module = [
    "bugzilla.*",
    "gssapi.*",
    "guestfs.*",
    "html2text.*",
    "fmf.*",
    "junit_xml.*",
    "libvirt.*",
    "nitrate.*",
    "pylero.*",
    "testcloud.*",
    "importlib_metadata",
    "mrack.*",
]
ignore_missing_imports = true

[tool.autopep8]
max_line_length = 99
in-place = true
recursive = true
hang-closing = true
aggressive = 2

[tool.pep8]
max-line-length = "99"

[tool.ruff]
line-length = 99
src = ["tmt", "tests", "bin"]
target-version = "py37"
select = [
    "F",  # pyflakes
    "E",  # pycodestyle
    "W",  # pycodestyle
#    "C90",  # mccabe
    "I",  # isort
    "N",  # pep8-naming
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "YTT",  # flake8-2020
#    "ANN",  # flake8-annotations
#    "S",  # flake8-bandit
    "ISC",  # flake8-implicit-str-concat
    "PT",   # flake8-pytest-style
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
#    "ARG",  # flake8-unused-arguments
#    "BLE",  # flake8-blind-except
#    "FBT",  # flake8-boolean-trap
#    "A",  # flake8-builtins
    "COM",  # flake8-commas
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
#    "EM",  # flake8-errmsg
    "EXE",  # flake8-executable
#    "G",  # flake8-logging-format
    "PIE",  # flake8-pie
#    "T20",  # flake8-print
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
#    "SLF",  # flake8-self
#    "TCH",  # flake8-type-checking
    "PGH",  # pygrep-hooks
    "PLC",  # pylint-convention
    "PLE",  # pylint-error
    "PLR01",  # pylint-refactor
    "PLR02",
    "PLR04",
    "PLR1",
#    "PLW",  # pylint-warning
#    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF",  # perflint
    "RUF",  # ruff
]
ignore = [
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ...
    "COM812",  # Trailing comma missing
    "PIE790",  # Unnecessary `pass` statement
    "PLE1205",  # Too many arguments for `logging` format string
    "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
    "UP021",  # `universal_newlines` has been renamed to `text` in Python 3.7
    "Q000",  # Double quotes found but single quotes preferred
]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [ "tmt.utils.field" ]

[tool.ruff.isort]
known-first-party = ["tmt"]

[tool.pytest.ini_options]
markers = [
    "web: tests which need to access the web"
]
